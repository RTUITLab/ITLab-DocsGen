trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Gradle@2
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'build'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        sonarQubeRunAnalysis: false
    - task: Gradle@2
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'copyLibToDeploy'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        sonarQubeRunAnalysis: false
    - publish: deploy
      artifact: itlab-docsgen
- stage: PackDockerImage
  displayName: Pack docker image
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job: Pack
    displayName: Pack
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - checkout: none
      - download: current
        artifact: itlab-docsgen
      - task: Docker@2
        displayName: Build an image
        inputs:
          containerRegistry: 'rtuitlab connection by admin'
          repository: 'rtuitlab/itlab-docsgen'
          command: 'buildAndPush'
          Dockerfile: '$(Pipeline.Workspace)/itlab-docsgen/Dockerfile'
          buildContext: '$(Pipeline.Workspace)/itlab-docsgen'
          tags: |
            $(tag)
            latest